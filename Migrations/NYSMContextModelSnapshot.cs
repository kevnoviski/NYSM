// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NYSM.Data;

namespace NYSM.Migrations
{
    [DbContext(typeof(NYSMContext))]
    partial class NYSMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NYSM.Models.AppFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("LineCount")
                        .HasColumnType("int");

                    b.Property<int>("WordCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("appFiles");
                });

            modelBuilder.Entity("NYSM.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alternative1")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alternative2")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alternative3")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Alternative4")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AppFileId")
                        .HasColumnType("int");

                    b.Property<string>("CorretAnwser")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionContent")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppFileId");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("NYSM.Models.ReadSpeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("WordPerSecond")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("readSpeeds");
                });

            modelBuilder.Entity("NYSM.Models.TestConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppFileId")
                        .HasColumnType("int");

                    b.Property<int?>("ReadSpeedId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppFileId");

                    b.HasIndex("ReadSpeedId");

                    b.HasIndex("UserId");

                    b.ToTable("testConfigs");
                });

            modelBuilder.Entity("NYSM.Models.TestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<int?>("TestcCnfigId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestcCnfigId");

                    b.HasIndex("UserId");

                    b.ToTable("testResults");
                });

            modelBuilder.Entity("NYSM.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("NYSM.Models.Question", b =>
                {
                    b.HasOne("NYSM.Models.AppFile", "AppFile")
                        .WithMany()
                        .HasForeignKey("AppFileId");

                    b.Navigation("AppFile");
                });

            modelBuilder.Entity("NYSM.Models.TestConfig", b =>
                {
                    b.HasOne("NYSM.Models.AppFile", "AppFile")
                        .WithMany()
                        .HasForeignKey("AppFileId");

                    b.HasOne("NYSM.Models.ReadSpeed", "ReadSpeed")
                        .WithMany()
                        .HasForeignKey("ReadSpeedId");

                    b.HasOne("NYSM.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AppFile");

                    b.Navigation("ReadSpeed");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NYSM.Models.TestResult", b =>
                {
                    b.HasOne("NYSM.Models.TestConfig", "TestcCnfig")
                        .WithMany()
                        .HasForeignKey("TestcCnfigId");

                    b.HasOne("NYSM.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("TestcCnfig");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
